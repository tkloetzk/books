// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenreSelector renders deletes removes category from state when a category is deleted 1`] = `
<WithStyles(FormControl)
  component="fieldset"
>
  <WithStyles(FormGroup)
    row={true}
  >
    <WithStyles(WithFormControlContext(FormLabel))
      component="label"
    >
      Genres:
    </WithStyles(WithFormControlContext(FormLabel))>
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="Religion"
        />
      }
      key="Religion"
      label="Religion"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={true}
          onChange={[Function]}
          value="SELECT ALL"
        />
      }
      key="SELECT ALL"
      label="SELECT ALL"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="DESELECT ALL"
        />
      }
      key="DESELECT ALL"
      label="DESELECT ALL"
    />
  </WithStyles(FormGroup)>
</WithStyles(FormControl)>
`;

exports[`GenreSelector renders inserts updates state after a new book with new category is inserted 1`] = `
<WithStyles(FormControl)
  component="fieldset"
>
  <WithStyles(FormGroup)
    row={true}
  >
    <WithStyles(WithFormControlContext(FormLabel))
      component="label"
    >
      Genres:
    </WithStyles(WithFormControlContext(FormLabel))>
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="Religion"
        />
      }
      key="Religion"
      label="Religion"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="Fatherhood"
        />
      }
      key="Fatherhood"
      label="Fatherhood"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="Motherhood"
        />
      }
      key="Motherhood"
      label="Motherhood"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={true}
          onChange={[Function]}
          value="SELECT ALL"
        />
      }
      key="SELECT ALL"
      label="SELECT ALL"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="DESELECT ALL"
        />
      }
      key="DESELECT ALL"
      label="DESELECT ALL"
    />
  </WithStyles(FormGroup)>
</WithStyles(FormControl)>
`;

exports[`GenreSelector renders renders with no genres 1`] = `
<WithStyles(FormControl)
  component="fieldset"
>
  <WithStyles(FormGroup)
    row={true}
  >
    <WithStyles(WithFormControlContext(FormLabel))
      component="label"
    >
      Genres:
    </WithStyles(WithFormControlContext(FormLabel))>
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={true}
          onChange={[Function]}
          value="SELECT ALL"
        />
      }
      key="SELECT ALL"
      label="SELECT ALL"
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      control={
        <WithStyles(Checkbox)
          checked={false}
          onChange={[Function]}
          value="DESELECT ALL"
        />
      }
      key="DESELECT ALL"
      label="DESELECT ALL"
    />
  </WithStyles(FormGroup)>
</WithStyles(FormControl)>
`;
